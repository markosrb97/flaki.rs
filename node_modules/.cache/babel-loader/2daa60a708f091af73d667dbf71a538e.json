{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marko\\\\Desktop\\\\flaki.rs\\\\src\\\\pages\\\\Register.js\";\nimport React from 'react';\nimport '../css/Register.css';\nimport logo from '../images/logo.png';\nimport personIcon from \"../images/iconmonstr-user-6.svg\";\nimport emailIcon from \"../images/iconmonstr-email-2.svg\";\nimport eyeOpen from \"../images/iconmonstr-eye-5.svg\";\nimport eyeClosed from \"../images/iconmonstr-eye-8.svg\";\nimport bigImage from '../images/puppy.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n\n    this.showHide = () => {\n      this.state.type === 'password' ? this.setState({\n        type: 'text',\n        icon: eyeOpen\n      }) : this.setState({\n        type: 'password',\n        icon: eyeClosed\n      });\n    };\n\n    this.showHideRetype = () => {\n      this.state.typeRetype === 'password' ? this.setState({\n        typeRetype: 'text',\n        iconRetype: eyeOpen\n      }) : this.setState({\n        typeRetype: 'password',\n        iconRetype: eyeClosed\n      });\n    };\n\n    this.changeFirstName = e => {\n      this.setState({\n        firstname: e.target.value\n      });\n    };\n\n    this.changeLastName = e => {\n      this.setState({\n        lastname: e.target.value\n      });\n    };\n\n    this.changeEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.changePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.changePasswordRetype = e => {\n      this.setState({\n        passwordRetype: e.target.value\n      });\n    };\n\n    this.formValidation = () => {\n      let {\n        firstname,\n        lastname,\n        email,\n        password,\n        passwordRetype\n      } = this.state;\n      let error = {};\n      let formIsValid = true;\n\n      if (firstname === \"\") {\n        formIsValid = false;\n        error['firstname'] = \"Obavezno polje\";\n      }\n\n      if (firstname !== \"\") {\n        if (!firstname.match(/^[a-zA-Z]+$/)) {\n          formIsValid = false;\n          error['firstname'] = \"Nedozvoljeni karakteri\";\n        }\n      }\n\n      if (lastname === \"\") {\n        formIsValid = false;\n        error['lastname'] = \"Obavezno polje\";\n      }\n\n      if (lastname !== \"\") {\n        if (!lastname.match(/^[a-zA-Z]+$/)) {\n          formIsValid = false;\n          error['lastname'] = \"Nedozvoljeni karakteri\";\n        }\n      }\n\n      if (email === \"\") {\n        formIsValid = false;\n        error['email'] = \"Obavezno polje\";\n      }\n\n      if (email !== \"\") {\n        let lastAtPos = email.lastIndexOf('@');\n        let lastDotPos = email.lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && email.length - lastDotPos > 2)) {\n          formIsValid = false;\n          error[\"email\"] = \"Email nije ispravan\";\n        }\n      }\n\n      if (password === \"\") {\n        formIsValid = false;\n        error['password'] = \"Obavezno polje\";\n      }\n\n      if (passwordRetype !== password) {\n        formIsValid = false;\n        error['passwordRetype'] = \"Å ifre se ne poklapaju\";\n      }\n\n      this.setState({\n        errors: error\n      });\n      return formIsValid;\n    };\n\n    this.sendData = event => {\n      event.preventDefault();\n\n      if (this.formValidation()) {\n        console.log(\"Uspesno\");\n      } else {\n        console.log(\"Forma nije popunjena\");\n      }\n    };\n\n    this.state = {\n      icon: eyeClosed,\n      iconRetype: eyeClosed,\n      type: \"password\",\n      typeRetype: 'password',\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      passwordRetype: \"\",\n      errors: {}\n    };\n  }\n\n  render() {\n    let {\n      firstname,\n      lastname,\n      email,\n      password,\n      type,\n      icon,\n      passwordRetype,\n      iconRetype,\n      typeRetype\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.sendData,\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"form-logo\",\n              src: logo,\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center\",\n            children: \"Napravitee nalog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-input custom-input-small\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-input-img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: personIcon,\n                  alt: \"preson_icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-field-custom\",\n                type: \"text\",\n                defaultValue: firstname,\n                placeholder: \"Ime\",\n                onChange: e => this.changeFirstName(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"error-msg\",\n                children: this.state.errors[\"firstname\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-input custom-input-small\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-input-img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: personIcon,\n                  alt: \"preson_icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-field-custom\",\n                type: \"text\",\n                defaultValue: lastname,\n                placeholder: \"Prezime\",\n                onChange: e => this.changeLastName(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"error-msg\",\n                children: this.state.errors[\"lastname\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-input mb-20\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-input-img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: emailIcon,\n                alt: \"email_icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field-custom\",\n              type: \"email\",\n              defaultValue: email,\n              placeholder: \"Unesite va\\u0161 Email\",\n              onChange: e => this.changeEmail(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"error-msg\",\n              children: this.state.errors[\"email\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-input-img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: icon,\n                alt: \"eye_icon\",\n                onClick: this.showHide\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field-custom\",\n              type: type,\n              defaultValue: password,\n              placeholder: \"Unesite va\\u0161u \\u0161ifru\",\n              onChange: e => this.changePassword(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"error-msg\",\n              children: this.state.errors[\"password\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-input-img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: iconRetype,\n                alt: \"eye_icon\",\n                onClick: this.showHideRetype\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-field-custom\",\n              type: typeRetype,\n              defaultValue: passwordRetype,\n              placeholder: \"Ponovite va\\u0161u \\u0161ifru\",\n              onChange: e => this.changePasswordRetype(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"error-msg\",\n              children: this.state.errors[\"passwordRetype\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn text-center\",\n            formNoValidate: true,\n            value: \"Registrujte se\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"big-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bigImage,\n          alt: \"big_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Marko/Desktop/flaki.rs/src/pages/Register.js"],"names":["React","logo","bigImage","Register","Component","constructor","showHide","state","type","setState","icon","eyeOpen","eyeClosed","showHideRetype","typeRetype","iconRetype","changeFirstName","e","firstname","target","value","changeLastName","lastname","changeEmail","email","changePassword","password","changePasswordRetype","passwordRetype","formValidation","error","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","errors","sendData","event","preventDefault","console","log","render","personIcon","emailIcon"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../css/Register.css';\r\nimport logo from '../images/logo.png';\r\nimport personIcon from '../images/iconmonstr-user-6.svg';\r\nimport emailIcon from '../images/iconmonstr-email-2.svg';\r\nimport eyeOpen from '../images/iconmonstr-eye-5.svg';\r\nimport eyeClosed from '../images/iconmonstr-eye-8.svg';\r\nimport bigImage from '../images/puppy.jpg';\r\n\r\n\r\nclass Register extends React.Component {\r\n    \r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            icon: eyeClosed,\r\n            iconRetype: eyeClosed,\r\n            type: \"password\",\r\n            typeRetype: 'password',\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            passwordRetype: \"\",\r\n            errors: {}\r\n\r\n        }\r\n    }\r\n\r\n    showHide = () => {\r\n        this.state.type === 'password' ? (\r\n            this.setState({type: 'text', icon: eyeOpen})\r\n        ) : (\r\n            this.setState({type: 'password',  icon: eyeClosed})\r\n        )\r\n    }\r\n\r\n    showHideRetype = () => {\r\n        this.state.typeRetype === 'password' ? (\r\n            this.setState({typeRetype: 'text', iconRetype: eyeOpen})\r\n        ) : (\r\n            this.setState({typeRetype: 'password',  iconRetype: eyeClosed})\r\n        )\r\n    }\r\n\r\n    changeFirstName = e => {\r\n        this.setState({firstname: e.target.value});\r\n    }\r\n\r\n    changeLastName = e => {\r\n        this.setState({lastname: e.target.value});\r\n    }\r\n\r\n    changeEmail = e => {\r\n        this.setState({email: e.target.value});\r\n    }\r\n\r\n    changePassword = e => {\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    changePasswordRetype = e => {\r\n        this.setState({passwordRetype: e.target.value});\r\n    }\r\n\r\n    formValidation = () => {\r\n        let {firstname, lastname, email, password, passwordRetype} = this.state;\r\n        let error = {};\r\n        let formIsValid = true;\r\n\r\n        if (firstname === \"\") {\r\n            formIsValid = false;\r\n            error['firstname'] = \"Obavezno polje\";\r\n        }\r\n\r\n        if(firstname !== \"\"){\r\n            if(!firstname.match(/^[a-zA-Z]+$/)){\r\n               formIsValid = false;\r\n               error['firstname'] = \"Nedozvoljeni karakteri\";\r\n            }        \r\n         }\r\n\r\n        if (lastname === \"\") {\r\n            formIsValid = false;\r\n            error['lastname'] = \"Obavezno polje\";\r\n        }\r\n\r\n        if(lastname !== \"\"){\r\n            if(!lastname.match(/^[a-zA-Z]+$/)){\r\n               formIsValid = false;\r\n               error['lastname'] = \"Nedozvoljeni karakteri\";\r\n            }        \r\n         }\r\n\r\n        if (email === \"\") {\r\n            formIsValid = false;\r\n            error['email'] = \"Obavezno polje\";\r\n        }\r\n\r\n        if(email !== \"\"){\r\n            let lastAtPos = email.lastIndexOf('@');\r\n            let lastDotPos = email.lastIndexOf('.');\r\n\r\n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf('@@') === -1 && lastDotPos > 2 && (email.length - lastDotPos) > 2)) {\r\n               formIsValid = false;\r\n               error[\"email\"] = \"Email nije ispravan\";\r\n             }\r\n        }  \r\n\r\n        if (password === \"\") {\r\n            formIsValid = false;\r\n            error['password'] = \"Obavezno polje\";\r\n        }\r\n\r\n        if (passwordRetype !== password) {\r\n            formIsValid = false;\r\n            error['passwordRetype'] = \"Å ifre se ne poklapaju\"\r\n        }\r\n\r\n        this.setState({errors: error});\r\n        return formIsValid;\r\n    }\r\n    \r\n    sendData = (event) => {     \r\n        event.preventDefault(); \r\n        \r\n        if (this.formValidation()){ \r\n            console.log(\"Uspesno\")\r\n        } else { \r\n            console.log(\"Forma nije popunjena\")\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        let { firstname, lastname, email, password, type, icon, passwordRetype, iconRetype, typeRetype } = this.state;\r\n\r\n        return (   \r\n                    <div className=\"register mt-5\">\r\n                        <div className=\"register-form\">\r\n                            <form onSubmit = {this.sendData} className=\"text-center\" >\r\n                                <a href='/'>\r\n                                    <img className=\"form-logo\" src={logo} alt=\"Logo\"></img>\r\n                                </a>\r\n                                <h2 className=\"text-center\">Napravitee nalog</h2>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div className=\"custom-input custom-input-small\">\r\n                                        <div className=\"custom-input-img\">\r\n                                            <img src={personIcon}  alt=\"preson_icon\"></img>\r\n                                        </div>\r\n                                        <input className=\"input-field-custom\" type=\"text\" defaultValue={firstname} placeholder=\"Ime\" onChange={ (e) => this.changeFirstName(e)}></input>\r\n                                        <h6 className=\"error-msg\">{this.state.errors[\"firstname\"]}</h6>\r\n                                    </div>\r\n                                    <div className=\"custom-input custom-input-small\">\r\n                                        <div className=\"custom-input-img\">\r\n                                            <img src={personIcon} alt=\"preson_icon\"></img>\r\n                                        </div>\r\n                                        <input className=\"input-field-custom\" type=\"text\" defaultValue={lastname} placeholder=\"Prezime\" onChange={ (e) => this.changeLastName(e)}></input>\r\n                                        <h6 className=\"error-msg\">{this.state.errors[\"lastname\"]}</h6>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"custom-input mb-20\">\r\n                                    <div className=\"custom-input-img\">\r\n                                        <img src={emailIcon}  alt=\"email_icon\"></img>\r\n                                    </div>\r\n                                    <input className=\"input-field-custom\"  type=\"email\" defaultValue={email} placeholder=\"Unesite vaÅ¡ Email\" onChange={ (e) => this.changeEmail(e)}></input>\r\n                                    <h6 className=\"error-msg\">{this.state.errors[\"email\"]}</h6>\r\n                                </div>\r\n                                <div className=\"custom-input\">\r\n                                    <div className=\"custom-input-img\">\r\n                                        <img src={icon}  alt=\"eye_icon\" onClick={this.showHide}></img>\r\n                                    </div>\r\n                                    <input className=\"input-field-custom\" type={type} defaultValue={password} placeholder=\"Unesite vaÅ¡u Å¡ifru\" onChange={ (e) => this.changePassword(e)}></input>\r\n                                    <h6 className=\"error-msg\">{this.state.errors[\"password\"]}</h6>\r\n                                </div>\r\n                                <div className=\"custom-input\">\r\n                                    <div className=\"custom-input-img\">\r\n                                        <img src={iconRetype}  alt=\"eye_icon\" onClick={this.showHideRetype}></img>\r\n                                    </div>\r\n                                    <input className=\"input-field-custom\" type={typeRetype} defaultValue={passwordRetype} placeholder=\"Ponovite vaÅ¡u Å¡ifru\" onChange={ (e) => this.changePasswordRetype(e)}></input>\r\n                                    <h6 className=\"error-msg\">{this.state.errors[\"passwordRetype\"]}</h6>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn text-center\" formNoValidate value=\"Registrujte se\" />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"big-image\">\r\n                            <img src={bigImage}  alt=\"big_img\"></img>\r\n                        </div>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}